buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
		lombokVersion = '1.16.12'
		flyWayVersion = '4.0.3'
		acciDoctorVersion = '1.5.3'
	}
	repositories {
		mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
//apply plugin: 'checkstyle'
apply plugin: 'findbugs'
//apply plugin: 'jdepend'
//apply plugin: 'pmd'
//apply plugin: 'project-report'

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
		resources {
			srcDir 'src/main/resources'
		}
	}
	test {
		java {
			srcDir 'src/test/java'
		}
		resources {
			srcDir 'src/test/resources'
		}
	}
	integrationTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir 'src/test-int/java'
		}
		resources {
			srcDir 'src/test-int/resources'
		}
	}
}

findbugsMain {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

findbugsTest {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

findbugsIntegrationTest {
	reports {
		xml.enabled = false
		html.enabled = true
	}
}

findbugs {
	ignoreFailures = true
	toolVersion = "3.0.1"
	sourceSets = [sourceSets.main, sourceSets.test, sourceSets.integrationTest]
	reportsDir = file("$project.buildDir/reports/findbugsReports")
	effort = "max"
	reportLevel = "high"
}

jacoco {
	toolVersion = "0.7.7.201606060606"
	reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}

jacocoTestReport {
	reports {
		xml.enabled false
		csv.enabled false
		html.destination "${buildDir}/jacocoHtml"
	}
}

test {
	testLogging.showStandardStreams = true
	jacoco {
		append = false
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		classDumpFile = file("$buildDir/jacoco/classpathdumps")
	}
}

jar {
	baseName = 'airtraffic'
	version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

configurations {
	integrationTestCompile.extendsFrom testCompile
	integrationTestRuntime.extendsFrom testRuntime

	all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
	compile "org.projectlombok:lombok:${lombokVersion}"
	compile 'org.springframework.boot:spring-boot-starter'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile "org.flywaydb:flyway-core:${flyWayVersion}"
	compile 'org.springframework.boot:spring-boot-starter-thymeleaf'
	compile 'org.springframework.boot:spring-boot-devtools'
//	compile 'org.webjars:angularjs:1.4.9'
//	compile 'org.webjars:bootstrap:4.0.0-alpha.5'
//	compile 'org.webjars:angular-google-maps:2.3.2'

	testCompile 'org.springframework.boot:spring-boot-starter-test'
	runtime 'mysql:mysql-connector-java'
}

task integrationTest(type: Test) {
	testClassesDir = sourceSets.integrationTest.output.classesDir
	classpath = sourceSets.integrationTest.runtimeClasspath
	outputs.upToDateWhen { false }

	// by default, tests are run in the "int" spring profile
//	def springProfile = testEnv ?: "int"

//	println "Setting spring profile for tests: ${springProfile}"
//	systemProperty 'spring.profiles.active', springProfile
}
tasks.withType(Test) {
	reports.html.destination = file("${reporting.baseDir}/${name}")
}

check.dependsOn integrationTest